import { VerticalBox,HorizontalBox,Button } from "std-widgets.slint";
export component DefaultLoading inherits HorizontalLayout {
    width: 50px;
    height: 50px;
    alignment: center;
    property <length> h1:20px;
    property <length> h2:35px;
    property <length> h3:50px;


    VerticalLayout {
        alignment: center;
        Rectangle {
            background: red;
            width: 5px;
            height: h1;
        }
    }
    Rectangle {
        width: 10px;
    }
    VerticalLayout {
        alignment: center;
        Rectangle {
            background: green;
            width: 5px;
            height: h2;
        }
    }
    Rectangle {
        width: 10px;
    }
    VerticalLayout {
        alignment: center;
        Rectangle {
            background: blue;
            width: 5px;
            height: h3;
        }
    }
   
    animate h1,h3 {
        duration: 350ms;
        iteration-count: -1;
    }
    animate h2 {
        duration: 300ms;
        iteration-count: -1;
    }
    init => {
        h1 = 50px;
        h3 = 20px;
        h2 = 15px;
    }
  
}

// copied from https://github.com/slint-ui/slint/issues/902
export component CustomSpinner inherits Rectangle {
    width: 100px;
    height: 100px;

    for idx in 20 : Rectangle {
        width: min(root.height, root.width) * 0.1;
        height: self.width;
        background: gray;
        border-radius: self.width/2;

        x: parent.width * (0.5 +  Math.sin(1turn * (idx/20 + animation-tick()/5s)) * 0.4) - self.width/2;
        y: parent.height * (0.5 +  Math.cos(1turn * (idx/20 + animation-tick()/5s)) * 0.4) - self.height/2;
    }
}



// copied from https://github.com/slint-ui/slint/issues/902
export component CustomProgressBar inherits Rectangle {
    width: 100px;
    height: 20px;

    property <color> col1 : #2320db;
    property <color> col2 : #4fa4dd;

    property <float> animated : Math.mod(animation-tick()/2s, 1);
    background: animated < 0.25 ? @linear-gradient(90deg, col1 0%, col1 animated*4, col2 100%)
                : animated < 0.5  ? @linear-gradient(90deg, col2 0%, col1 animated*4 - 1, col1 100%)
                : animated < 0.75 ? @linear-gradient(90deg, col2 0%, col2 animated*4 - 2, col1 100%)
                :                   @linear-gradient(90deg, col1 0%, col2 animated*4 - 3, col2 100%);
}