// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.82.3.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.io.dart' if (dart.library.html) 'bridge_generated.web.dart';

class FsbImpl implements Fsb {
  final FsbPlatform _platform;
  factory FsbImpl(ExternalLibrary dylib) => FsbImpl.raw(FsbPlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory FsbImpl.wasm(FutureOr<WasmModule> module) => FsbImpl(module as ExternalLibrary);
  FsbImpl.raw(this._platform);
  Future<void> sayHello({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_say_hello(port_),
      parseSuccessData: _wire2api_unit,
      parseErrorData: null,
      constMeta: kSayHelloConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSayHelloConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "say_hello",
        argNames: [],
      );

  Future<void> createEventLoop({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_create_event_loop(port_),
      parseSuccessData: _wire2api_unit,
      parseErrorData: null,
      constMeta: kCreateEventLoopConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCreateEventLoopConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "create_event_loop",
        argNames: [],
      );

  Future<void> showDialog({EventMessage? message, dynamic hint}) {
    var arg0 = _platform.api2wire_opt_box_autoadd_event_message(message);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_show_dialog(port_, arg0),
      parseSuccessData: _wire2api_unit,
      parseErrorData: null,
      constMeta: kShowDialogConstMeta,
      argValues: [message],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kShowDialogConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "show_dialog",
        argNames: ["message"],
      );

  Stream<String> dartMessageStream({dynamic hint}) {
    return _platform.executeStream(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_dart_message_stream(port_),
      parseSuccessData: _wire2api_String,
      parseErrorData: _wire2api_FrbAnyhowException,
      constMeta: kDartMessageStreamConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDartMessageStreamConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "dart_message_stream",
        argNames: [],
      );

  Future<void> sendDartMessage({required String message, dynamic hint}) {
    var arg0 = _platform.api2wire_String(message);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_send_dart_message(port_, arg0),
      parseSuccessData: _wire2api_unit,
      parseErrorData: null,
      constMeta: kSendDartMessageConstMeta,
      argValues: [message],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSendDartMessageConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "send_dart_message",
        argNames: ["message"],
      );

  Future<void> setItemId({required int id, dynamic hint}) {
    var arg0 = api2wire_i32(id);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_set_item_id(port_, arg0),
      parseSuccessData: _wire2api_unit,
      parseErrorData: null,
      constMeta: kSetItemIdConstMeta,
      argValues: [id],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSetItemIdConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "set_item_id",
        argNames: ["id"],
      );

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  FrbAnyhowException _wire2api_FrbAnyhowException(dynamic raw) {
    return FrbAnyhowException(raw as String);
  }

  String _wire2api_String(dynamic raw) {
    return raw as String;
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }

  void _wire2api_unit(dynamic raw) {
    return;
  }
}

// Section: api2wire

@protected
int api2wire_dialog_type(DialogType raw) {
  return api2wire_i32(raw.index);
}

@protected
int api2wire_i32(int raw) {
  return raw;
}

@protected
int api2wire_i8(int raw) {
  return raw;
}

@protected
int api2wire_u8(int raw) {
  return raw;
}

// Section: finalizer
